const reservedKeywords = [
	'else',
	'instanceof',
	'await',
	'yield',
	'super',
	'enum',
	'switch',
	'break',
	'export',
	'interface',
	'let',
	'this',
	'throw',
	'new',
	'null',
	'true',
	'package',
	'try',
	'private',
	'typeof',
	'protected',
	'var',
	'public',
	'void',
	'return',
	'while',
	'static',
	'with',
	'extends',
	'case',
	'false',
	'catch',
	'finally',
	'class',
	'const',
	'for',
	'continue',
	'function',
	'debugger',
	'default',
	'if',
	'delete',
	'implements',
	'do',
	'import',
	'in',
	'alert',
	'area',
	'checkbox',
	'close',
	'crypto',
	'document',
	'embeds',
	'event',
	'forms',
	'layer',
	'mimeTypes',
	'frameRate',
	'images',
	'option',
	'pageXOffset',
	'parseInt',
	'prompt',
	'screenX',
	'select',
	'status',
	'textarea',
	'window',
	'all',
	'anchor',
	'anchors',
	'assign',
	'blur',
	'button',
	'clearInterval',
	'clearTimeout',
	'clientInformation',
	'closed',
	'confirm',
	'constructor',
	'decodeURI',
	'decodeURIComponent',
	'defaultStatus',
	'element',
	'elements',
	'embed',
	'encodeURI',
	'encodeURIComponent',
	'escape',
	'fileUpload',
	'focus',
	'form',
	'frame',
	'innerHeight',
	'innerWidth',
	'layers',
	'link',
	'location',
	'navigate',
	'navigator',
	'frames',
	'hidden',
	'history',
	'image',
	'offscreenBuffering',
	'open',
	'opener',
	'outerHeight',
	'outerWidth',
	'packages',
	'pageYOffset',
	'parent',
	'parseFloat',
	'password',
	'pkcs11',
	'plugin',
	'propertyIsEnum',
	'radio',
	'reset',
	'screenY',
	'scroll',
	'secure',
	'self',
	'setInterval',
	'setTimeout',
	'submit',
	'taint',
	'text',
	'top',
	'unescape',
	'untaint'
]

let timeoutKey = ''

const input = document.getElementById('reservedKeyWordInput')
input.addEventListener("keyup", event => {
	if (event.key === "Enter") {
		const testWord = input.value
		clearTimeout(timeoutKey)
		if (reservedKeywords.indexOf(testWord) > -1) {
			document.getElementById('no').style.top = `${input.getBoundingClientRect().y + 50}px`
			document.getElementById('no').style.display = "block"
			document.getElementById('yes').style.display = "none"
			timeoutKey = setTimeout(_ => {
				document.getElementById('no').style.display = "none"
				document.getElementById('yes').style.display = "none"
			}, 5000)
		} else {
			document.getElementById('yes').style.top = `${input.getBoundingClientRect().y + 50}px`
			document.getElementById('yes').style.display = "block"
			document.getElementById('no').style.display = "none"
			timeoutKey = setTimeout(_ => {
				document.getElementById('no').style.display = "none"
				document.getElementById('yes').style.display = "none"
			}, 5000)
		}
	}
});